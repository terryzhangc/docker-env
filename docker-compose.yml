version: '2.1'

networks:
  spring-net:

services:
  consul-server1:
    image: consul:1.6.2
    container_name: consul-server1
    command: agent -server -bootstrap-expect=3 -node=consul-server1 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    networks:
      - spring-net

  consul-server2:
    image: consul:1.6.2
    container_name: consul-server2
    command: agent -server -retry-join=consul-server1 -node=consul-server2 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    depends_on:
        - consul-server1
    networks:
      - spring-net

  consul-server3:
    image: consul:1.6.2
    container_name: consul-server3
    command: agent -server -retry-join=consul-server1 -node=consul-server3 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    depends_on:
        - consul-server1
    networks:
      - spring-net

  consul-agent:
    image: consul:1.6.2
    container_name: consul-agent
    command: agent -retry-join=consul-server1 -node=consul-agent -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1 -ui 
    ports:
      - 8500:8500
    depends_on:
        - consul-server2
        - consul-server3
    networks:
      - spring-net

  mysql:
    image: mysql:5.7
    #build: ./mysql  # 指定 Dockerfile 所在路径
    container_name: mysql57
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    networks:
      - spring-net